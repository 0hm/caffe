# reduce the learning rate after 8 epochs (4000 iters) by a factor of 10

# The train/test net protocol buffer definition
train_net: "examples/cifar10/ls_cifar10_quick_train.prototxt"
test_net: "examples/cifar10/ls_cifar10_quick_test.prototxt"
# test_iter specifies how many forward passes the test should carry out.
# In the case of CIFAR, we have test batch size 100 and 100 test iterations,
# covering the full 10,000 testing images.
test_iter: 100
test_net: "examples/cifar10/ls_cifar10_quick_test_2.prototxt"
test_iter: 10
# Carry out testing every 500 training iterations.
test_interval: 500
test_compute_loss: true
# The base learning rate, momentum and the weight decay of the network.
base_lr: 0.01
#momentum: 0.9
momentum: 0.0
weight_decay: 0.00
#weight_decay: 0.004
# The learning rate policy
lr_policy: "fixed"
#lr_policy: "multistep"
#stepvalue: 5000
#stepvalue: 10000
#stepvalue: 15000
#stepvalue: 20000
#stepvalue: 25000
#gamma: 0.05
# Display every 100 iterations
display: 100
# The maximum number of iterations
max_iter: 30000
# snapshot intermediate results
snapshot: 100000
snapshot_prefix: "examples/cifar10/ls_quick"
# solver mode: CPU or GPU
solver_mode: GPU
ls_on: true
ls_param {
  ls_net_id: 1 
  ls_start: 500
  ls_interval: 500
  alpha_min:  -1.0
  alpha_max:  4.0
  alpha_step: 0.5
  alrc: true
  amc: false
  merge: false
}
